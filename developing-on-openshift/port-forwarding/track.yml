slug: connecting-to-a-database-using-port-forwarding-v2
id: hzh7bhq98lnv
type: track
title: Connecting to a Database Using Port Forwarding -v2
description: |
  The goal of this track is to teach you how to use port forwarding to run a database as persistent storage on OpenShift.

  |What you need to know before you start|
  |----|
  |In order to get full benefit from taking this track you should...<br>• Be comfortable working at the command line in a terminal window.<br>• Have a general understanding about the purpose and use of [OpenShift](https://www.redhat.com/en/technologies/cloud-computing/openshift/container-platform)<br>• Have a general understanding of working with a database from the command line. |

  In this track you'll learn how to access a database server in an OpenShift cluster from the command line. Also, you'll learn how to use port forwarding to temporarily expose a database service outside of an OpenShift cluster. Once a database is exposed outside of the cluster you can work with it using a database API tool such as a database administration client.

  ## Concepts and techniques you'll cover

  * Working with the OpenShift `oc` command line tool
  * Creating OpenShift projects and applications from the command line
  * Understanding Persistent Volumes storage in OpenShift clusters using a database
  * Understanding provisional routing of external traffic to cluster services using port forwarding
  * Working with a database in an OpenShift cluster from a local machine using port forwarding

  ## Use case

  You'll use the concepts and techniques covered in this track when you want to deploy an application's database server to an OpenShift cluster and then work with it directly throughout a continuous software development life development (SDLC) as the application matures from the development stage and on toward production release.
icon: https://logodix.com/logo/1910931.png
level: beginner
tags:
- openshift
owner: openshift
developers:
- bob@cogarttech.com
- dschenck@redhat.com
private: true
published: false
checksum: "549809613220379385"
