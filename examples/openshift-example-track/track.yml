slug: openshift-example-track
id: mdqdws7j7qmd
type: track
title: OpenShift example track
description: |
  ## OpenShift example track

  OpenShift is a family of containerization software products developed by Red Hat.

  Its flagship product is the OpenShift Container Platform â€” an on-premises platform as a service built around Linux containers orchestrated and managed by Kubernetes on a foundation of Red Hat Enterprise Linux.

  The family's other products provide this platform through different environments:

  * OKD serves as the community-driven upstream (akin to the way that Fedora is upstream of Red Hat Enterprise Linux)
  * Developer Sandbox for OpenShift is the platform offered as software as a service, and OpenShift Dedicated is the platform offered as a managed service.

  ![Logo](https://www.redhat.com/cms/managed-files/Logo-Red_Hat-OpenShift-A-Standard-RGB%20%284%29.png)
icon: https://logodix.com/logo/1910931.png
level: beginner
tags:
- openshift
owner: openshift
developers:
- nvinto@redhat.com
private: true
published: false
challenges:
- slug: step1
  id: ansgrpbdnsvw
  type: challenge
  title: Login to OpenShift
  notes:
  - type: text
    contents: In this step you will learn how to connect to OpenShift
  assignment: |2-

    Let's begin by connecting to OpenShift.

    From *Terminal 1*, run the following command to login with the OpenShift CLI:

    ```
    oc login -u admin -p admin https://api.crc.testing:6443 --insecure-skip-tls-verify=true
    ```

    You should see:
    ```bash
    Login successful.
    You don't have any projects. You can try to create a new project, by running `oc new-project <projectname>`
    ```
    Congratulations, you are now authenticated to the OpenShift cluster.

    Access the OpenShift Web Console to login from the Web UI:
    ```
    oc get routes console -n openshift-console -o jsonpath='{"https://"}{.spec.host}{"\n"}'
    ```
    Copy the URL from the output of the above command and open it in your browser.
    We'll deploy our app as the `admin` user. Use the following credentials:
    * Username:
    ```
    admin
    ```
    * Password:
    ```
    admin
    ```
  tabs:
  - title: Terminal 1
    type: terminal
    hostname: crc
  - title: Visual Editor
    type: code
    hostname: crc
    path: /root
  difficulty: basic
  timelimit: 150
- slug: step2
  id: ihzitshniij8
  type: challenge
  title: Create a new Project
  notes:
  - type: text
    contents: In this step you will learn how create a new project
  assignment: |-
    Now let's create a new project where to work with:
    ```
    oc new-project myproject
    ```
  tabs:
  - title: Terminal 1
    type: terminal
    hostname: crc
  - title: Visual Editor
    type: code
    hostname: crc
    path: /root/
  difficulty: basic
  timelimit: 150
- slug: step3
  id: owpqm1xt7lpb
  type: challenge
  title: Create a Pod
  notes:
  - type: text
    contents: In this step you will learn how create a new Pod
  assignment: |2-

    Review from *Visual Editor* Tab the YAML of `/root/simple-pod.yaml`.

    Now let's create a new Pod:

    ```
    oc create -f /root/simple-pod.yaml
    ```
  tabs:
  - title: Terminal 1
    type: terminal
    hostname: crc
    path: /root
  - title: Visual Editor
    type: code
    hostname: crc
    path: /root/
  difficulty: basic
  timelimit: 150
- slug: step4
  id: px6mpjyg1lyw
  type: challenge
  title: Create a Service
  notes:
  - type: text
    contents: In this step you will learn how create a new Service
  assignment: |-
    Review from *Visual Editor* Tab the YAML of `/root/nginx-svc.yaml`.

    Now let's create a new Service:

    ```
    oc create -f /root/nginx-svc.yaml
    ```
  tabs:
  - title: Terminal 1
    type: terminal
    hostname: crc
    path: /root
  - title: Visual Editor
    type: code
    hostname: crc
    path: /root/
  difficulty: basic
  timelimit: 150
checksum: "11289267482360716970"
