challenges:
- assignment: "Let's begin by creating a new project called `myproject`:\n\n```\n\
    oc new-project myproject\n```\n`\n```\n<br>\nCreate the Custom Resource Definition\
    \ (CRD) for the Etcd Operator:\n\n```\ncat > etcd-operator-crd.yaml<<EOF\napiVersion:\
    \ apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n  name:\
    \ etcdclusters.etcd.database.coreos.com\nspec:\n  group: etcd.database.coreos.com\n\
    \  names:\n    kind: EtcdCluster\n    listKind: EtcdClusterList\n    plural: etcdclusters\n\
    \    shortNames:\n    - etcdclus\n    - etcd\n    singular: etcdcluster\n  scope:\
    \ Namespaced\n  version: v1beta2\n  versions:\n  - name: v1beta2\n    schema:\n\
    \      openAPIV3Schema:\n        type: object\n        x-kubernetes-preserve-unknown-fields:\
    \ true\n    served: true\n    storage: true\nEOF\n```\n`\n```\n<br>\n```\noc create\
    \ -f etcd-operator-crd.yaml\n```\n`\n```\n<br>\nVerify the CRD was successfully\
    \ created.\n\n```\noc get crd etcdclusters.etcd.database.coreos.com\n```\n`\n\
    ```\n"
  difficulty: basic
  slug: step1
  tabs:
  - hostname: crc-nonest-1
    title: cli
    type: terminal
  - hostname: crc-nonest-1
    port: '30443'
    title: web-ui
    type: service
  timelimit: '300'
  title: Creating the Custom Resource Definition (CRD)
  type: challenge
- assignment: "Create a dedicated Service Account responsible for running the Etcd\
    \ Operator:\n\n```\ncat > etcd-operator-sa.yaml<<EOF\napiVersion: v1\nkind: ServiceAccount\n\
    metadata:\n  name: etcd-operator-sa\nEOF\n```\n`\n```\n<br>\n```\noc create -f\
    \ etcd-operator-sa.yaml\n```\n`\n```\n<br>\nVerify the Service Account was successfully\
    \ created:\n\n```\noc get sa\n```\n`\n```\n<br>\nCreate the Role that the `etcd-operator-sa`\
    \ Service Account will need for authorization to perform actions against the Kubernetes\
    \ API:\n\n```\ncat > etcd-operator-role.yaml<<EOF\napiVersion: rbac.authorization.k8s.io/v1\n\
    kind: Role\nmetadata:\n  name: etcd-operator-role\nrules:\n- apiGroups:\n  - etcd.database.coreos.com\n\
    \  resources:\n  - etcdclusters\n  - etcdbackups\n  - etcdrestores\n  verbs:\n\
    \  - '*'\n- apiGroups:\n  - \"\"\n  resources:\n  - pods\n  - services\n  - endpoints\n\
    \  - persistentvolumeclaims\n  - events\n  verbs:\n  - '*'\n- apiGroups:\n  -\
    \ apps\n  resources:\n  - deployments\n  verbs:\n  - '*'\n- apiGroups:\n  - \"\
    \"\n  resources:\n  - secrets\n  verbs:\n  - get\nEOF\n```\n`\n```\n<br>\n```\n\
    oc create -f etcd-operator-role.yaml\n```\n`\n```\n<br>\nVerify the Role was successfully\
    \ created:\n\n```\noc get roles\n```\n`\n```\n<br>\nCreate the RoleBinding to\
    \ bind the `etcd-operator-role` Role to the `etcd-operator-sa` Service Account:\n\
    \n```\ncat > etcd-operator-rolebinding.yaml<<EOF\napiVersion: rbac.authorization.k8s.io/v1\n\
    kind: RoleBinding\nmetadata:\n  name: etcd-operator-rolebinding\nroleRef:\n  apiGroup:\
    \ rbac.authorization.k8s.io\n  kind: Role\n  name: etcd-operator-role\nsubjects:\n\
    - kind: ServiceAccount\n  name: etcd-operator-sa\n  namespace: myproject\nEOF\n\
    ```\n`\n```\n<br>\n```\noc create -f etcd-operator-rolebinding.yaml\n```\n`\n\
    ```\n<br>\nVerify the RoleBinding was successfully created:\n\n```\noc get rolebindings\n\
    ```\n`\n```"
  difficulty: basic
  slug: step2
  tabs:
  - hostname: crc-nonest-1
    title: cli
    type: terminal
  - hostname: crc-nonest-1
    port: '30443'
    title: web-ui
    type: service
  timelimit: '300'
  title: Creating the Service Account, Role, and RoleBinding
  type: challenge
- assignment: "Create the Deployment containing the Etcd Operator container image:\n\
    \n```\ncat > etcd-operator-deployment.yaml<<EOF\napiVersion: apps/v1\nkind: Deployment\n\
    metadata:\n  labels:\n    name: etcdoperator\n  name: etcd-operator\nspec:\n \
    \ replicas: 1\n  selector:\n    matchLabels:\n      name: etcd-operator\n  template:\n\
    \    metadata:\n      labels:\n        name: etcd-operator\n    spec:\n      containers:\n\
    \      - command:\n        - etcd-operator\n        - --create-crd=false\n   \
    \     env:\n        - name: MY_POD_NAMESPACE\n          valueFrom:\n         \
    \   fieldRef:\n              apiVersion: v1\n              fieldPath: metadata.namespace\n\
    \        - name: MY_POD_NAME\n          valueFrom:\n            fieldRef:\n  \
    \            apiVersion: v1\n              fieldPath: metadata.name\n        image:\
    \ quay.io/coreos/etcd-operator@sha256:c0301e4686c3ed4206e370b42de5a3bd2229b9fb4906cf85f3f30650424abec2\n\
    \        imagePullPolicy: IfNotPresent\n        name: etcd-operator\n      serviceAccountName:\
    \ etcd-operator-sa\nEOF\n```\n`\n```\n<br>\n```\noc create -f etcd-operator-deployment.yaml\
    \ \n```\n`\n```\n<br>\nVerify the Etcd Operator Deployment was successfully created:\n\
    \n```\noc get deploy\n```\n`\n```\n<br>\nVerify the Etcd Operator Deployment pods\
    \ are running:\n\n```\noc get pods\n```\n`\n```\n<br>\nOpen a new terminal window\
    \ to follow Etcd Operator logs in real-time:\n\n```\nexport ETCD_OPERATOR_POD=$(oc\
    \ get pods -l name=etcd-operator -o jsonpath='{.items[0].metadata.name}')\noc\
    \ logs $ETCD_OPERATOR_POD -f\n```\n`\n```\n<br>\nObserve the leader-election lease\
    \ on the Etcd Operator Endpoint:\n\n```\noc get endpoints etcd-operator -o yaml\n\
    ```\n`\n```\n<br>\n"
  difficulty: basic
  slug: step3
  tabs:
  - hostname: crc-nonest-1
    title: cli
    type: terminal
  - hostname: crc-nonest-1
    port: '30443'
    title: web-ui
    type: service
  timelimit: '300'
  title: Creating the Etcd Operator Deployment
  type: challenge
- assignment: "Ensure you are currently scoped to the `myproject` Namespace:\n\n```\n\
    oc project myproject\n```\n`\n```\n\nCreate an Etcd cluster by referring to the\
    \ new Custom Resource, `EtcdCluster`, defined in the Custom Resource Definition\
    \ on Step 1:\n\n```\ncat > etcd-operator-cr.yaml<<EOF\napiVersion: etcd.database.coreos.com/v1beta2\n\
    kind: EtcdCluster\nmetadata:\n  name: example-etcd-cluster\nspec:\n  size: 3\n\
    \  version: 3.1.10\nEOF\n```\n`\n```\n<br>\n```\noc create -f etcd-operator-cr.yaml\n\
    ```\n`\n```\n<br>\nVerify the cluster object was created:\n\n```\noc get etcdclusters\n\
    ```\n`\n```\n<br>\nWatch the pods in the Etcd cluster get created:\n\n```\noc\
    \ get pods -l etcd_cluster=example-etcd-cluster -w\n```\n`\n```\n<br>\nVerify\
    \ the cluster has been exposed via a ClusterIP service:\n\n```\noc get services\
    \ -l etcd_cluster=example-etcd-cluster\n```\n`\n```\n<br>\n"
  difficulty: basic
  slug: step4
  tabs:
  - hostname: crc-nonest-1
    title: cli
    type: terminal
  - hostname: crc-nonest-1
    port: '30443'
    title: web-ui
    type: service
  timelimit: '300'
  title: Creating the EtcdCluster Custom Resource (CR)
  type: challenge
- assignment: "Let's now create another pod and attempt to connect to the etcd cluster\
    \ via `etcdctl`:\n\n```\noc run etcdclient --image=busybox busybox --restart=Never\
    \ -- /usr/bin/tail -f /dev/null\n```\n`\n```\n<br>\nAccess the pod:\n\n``` \n\
    oc rsh etcdclient\n```\n`\n```\n<br>\n\nInstall the Etcd Client:\n\n```\nwget\
    \ https://github.com/coreos/etcd/releases/download/v3.1.4/etcd-v3.1.4-linux-amd64.tar.gz\n\
    tar -xvf etcd-v3.1.4-linux-amd64.tar.gz\ncp etcd-v3.1.4-linux-amd64/etcdctl .\n\
    ```\n`\n```\n<br>\nSet the etcd version and endpoint variables:\n\n```\nexport\
    \ ETCDCTL_API=3\nexport ETCDCTL_ENDPOINTS=example-etcd-cluster-client:2379\n```\n\
    `\n```\n<br>\nAttempt to write a key/value into the Etcd cluster:\n\n```\n./etcdctl\
    \ put operator sdk\n./etcdctl get operator\n```\n`\n```\n<br>\nExit out of the\
    \ client pod:\n\n```\nexit\n```\n`\n```\n<br>\n"
  difficulty: basic
  slug: step5
  tabs:
  - hostname: crc-nonest-1
    title: cli
    type: terminal
  - hostname: crc-nonest-1
    port: '30443'
    title: web-ui
    type: service
  timelimit: '300'
  title: Interacting with a Live Etcd Cluster
  type: challenge
- assignment: 'Let''s change the size of the Etcd `example-etcd-cluster` CR. The Etcd
    Operator pod will detect the CR `spec.size` change and modify the number of pods
    in the cluster:


    ```

    oc patch etcdcluster example-etcd-cluster --type=''json'' -p ''[{"op": "replace",
    "path": "/spec/size", "value":5}]''

    ```

    `

    ```

    <br>


    Let''s change the version of our `example-etcd-cluster` CR. The etcd-operator
    pod will detect the CR `spec.version` change and create a new cluster with the
    newly specified image:


    ```

    oc patch etcdcluster example-etcd-cluster --type=''json'' -p ''[{"op": "replace",
    "path": "/spec/version", "value":3.2.13}]''

    ```

    `

    ```

    <br>

    '
  difficulty: basic
  slug: step6
  tabs:
  - hostname: crc-nonest-1
    title: cli
    type: terminal
  - hostname: crc-nonest-1
    port: '30443'
    title: web-ui
    type: service
  timelimit: '300'
  title: Scaling and Modifying the Etcd Version
  type: challenge
- assignment: 'In another session delete a pod from the cluster and watch recovery
    in real-time.


    ```

    export EXAMPLE_ETCD_CLUSTER_POD=$(oc get pods -l app=etcd -o jsonpath=''{.items[0].metadata.name}'')

    oc delete pod $EXAMPLE_ETCD_CLUSTER_POD

    ```

    `

    ```

    <br>

    '
  difficulty: basic
  slug: step7
  tabs:
  - hostname: crc-nonest-1
    title: cli
    type: terminal
  - hostname: crc-nonest-1
    port: '30443'
    title: web-ui
    type: service
  timelimit: '300'
  title: Disaster Recovery in Action
  type: challenge
- assignment: 'Delete your Etcd cluster:


    ```

    oc delete etcdcluster example-etcd-cluster

    ```

    `

    ```

    <br>

    Delete the Etcd Operator:


    ```

    oc delete deployment etcd-operator

    ```

    `

    ```

    <br>

    Delete the Etcd CRD:


    ```

    oc delete crd etcdclusters.etcd.database.coreos.com

    ```

    `

    ```

    <br>

    '
  difficulty: basic
  slug: step8
  tabs:
  - hostname: crc-nonest-1
    title: cli
    type: terminal
  - hostname: crc-nonest-1
    port: '30443'
    title: web-ui
    type: service
  timelimit: '300'
  title: Clean Up
  type: challenge
developers:
- btannous@redhat.com
- nvinto@redhat.com
- rjarvine@redhat.com
icon: https://logodix.com/logo/1910931.png
level: beginner
owner:
- openshift
private: 'false'
published: 'true'
skipping_enabled: 'true'
slug: etcd-operator
tags:
- openshift
title: Etcd Operator
type: truck
